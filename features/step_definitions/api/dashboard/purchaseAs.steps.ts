import { When, Then, Given } from '@cucumber/cucumber';
import logger from '../../../../src/Logger/logger';
import { Links } from '../../../../src/utils/links';
import { forecastRecommendedPurchasing } from '../../../../src/helpers/calculation-helper';
import _ from "lodash";

Then(`{} saves needed information to calculate {} item`, async function (actor, type: string) {
    if (type == 'normal') {
        this.meanLtdOfItem = this.randomAItemObject.meanLtd;
        this.safetyStockLtdOfItem = this.randomAItemObject.safetyStockLtd;
        this.snapshotQtyOfItem = this.randomAItemObject.snapshotQty;
        this.openSalesOrdersOfItem = this.randomAItemObject.openSalesOrders;
        this.openPurchaseOrdersOfItem = this.randomAItemObject.openPurchaseOrders;
        this.onHandThirdPartyOfItem = this.randomAItemObject.onHandThirdParty;
        this.inventorySourcePreferenceOfItem = this.randomAItemObject.inventorySourcePreference;
        this.onHandOfItem = this.randomAItemObject.onHand;
        this.inboundOfItem = this.randomAItemObject.inbound;
        this.inboundFcTransferOfItem = this.randomAItemObject.inboundFcTransfer;
        this.onHandFbmOfItem = this.randomAItemObject.onHandFbm;
        this.consolidatedQtyOfItem = this.randomAItemObject.consolidatedQty;
        this.lotMultipleQtyOfItem = this.randomAItemObject.lotMultipleQty;
        logger.log('info', `lotMultipleQtyOfItem >>>>>> ` + this.lotMultipleQtyOfItem);
        this.attach(`lotMultipleQtyOfItem >>>>>> ` + this.lotMultipleQtyOfItem);
        logger.log('info', `meanLtdOfItem >>>>>> ` + this.meanLtdOfItem);
        this.attach(`meanLtdOfItem >>>>>> ` + this.meanLtdOfItem);
        logger.log('info', `safetyStockLtdOfItem >>>>>> ` + this.safetyStockLtdOfItem);
        this.attach(`safetyStockLtdOfItem >>>>>> ` + this.safetyStockLtdOfItem);
        logger.log('info', `snapshotQtyOfItem >>>>>> ` + this.snapshotQtyOfItem);
        this.attach(`snapshotQtyOfItem >>>>>> ` + this.snapshotQtyOfItem);
        logger.log('info', `openSalesOrdersOfItem >>>>>> ` + this.openSalesOrdersOfItem);
        this.attach(`openSalesOrdersOfItem >>>>>> ` + this.openSalesOrdersOfItem);
        logger.log('info', `openPurchaseOrdersOfItem >>>>>> ` + this.openPurchaseOrdersOfItem);
        this.attach(`openPurchaseOrdersOfItem >>>>>> ` + this.openPurchaseOrdersOfItem);
        logger.log('info', `onHandThirdPartyOfItem >>>>>> ` + this.onHandThirdPartyOfItem);
        this.attach(`onHandThirdPartyOfItem >>>>>> ` + this.onHandThirdPartyOfItem);
        logger.log('info', `inventorySourcePreferenceOfItem >>>>>> ` + this.inventorySourcePreferenceOfItem);
        this.attach(`inventorySourcePreferenceOfItem >>>>>> ` + this.inventorySourcePreferenceOfItem);
        logger.log('info', `onHandOfItem >>>>>> ` + this.onHandOfItem);
        this.attach(`onHandOfItem >>>>>> ` + this.onHandOfItem);
        logger.log('info', `inboundOfItem >>>>>> ` + this.inboundOfItem);
        this.attach(`inboundOfItem >>>>>> ` + this.inboundOfItem);
        logger.log('info', `inboundFcTransferOfItem >>>>>> ` + this.inboundFcTransferOfItem);
        this.attach(`inboundFcTransferOfItem >>>>>> ` + this.inboundFcTransferOfItem);
        logger.log('info', `onHandFbmOfItem >>>>>> ` + this.onHandFbmOfItem);
        this.attach(`onHandFbmOfItem >>>>>> ` + this.onHandFbmOfItem);
        logger.log('info', `consolidatedQtyOfItem >>>>>> ` + this.consolidatedQtyOfItem);
        this.attach(`consolidatedQtyOfItem >>>>>> ` + this.consolidatedQtyOfItem);
    } else if (type == 'purchase as') {
        this.meanLtdOfPurchaseAsItem = this.randomAPurchaseAsItemObject.meanLtd;
        this.safetyStockLtdOfPurchaseAsItem = this.randomAPurchaseAsItemObject.safetyStockLtd;
        this.snapshotQtyOfPurchaseAsItem = this.randomAPurchaseAsItemObject.snapshotQty;
        this.openSalesOrdersOfPurchaseAsItem = this.randomAPurchaseAsItemObject.openSalesOrders;
        this.openPurchaseOrdersOfPurchaseAsItem = this.randomAPurchaseAsItemObject.openPurchaseOrders;
        this.onHandThirdPartyOfPurchaseAsItem = this.randomAPurchaseAsItemObject.onHandThirdParty;
        this.inventorySourcePreferenceOfPurchaseAsItem = this.randomAPurchaseAsItemObject.inventorySourcePreference;
        this.onHandOfPurchaseAsItem = this.randomAPurchaseAsItemObject.onHand;
        this.inboundOfPurchaseAsItem = this.randomAPurchaseAsItemObject.inbound;
        this.inboundFcTransferOfPurchaseAsItem = this.randomAPurchaseAsItemObject.inboundFcTransfer;
        this.onHandFbmOfPurchaseAsItem = this.randomAPurchaseAsItemObject.onHandFbm;
        this.consolidatedQtyOfPurchaseAsItem = this.randomAPurchaseAsItemObject.consolidatedQty;
        this.lotMultipleQtyOfPurchaseAsItem = this.randomAPurchaseAsItemObject.lotMultipleQty;
        logger.log('info', `lotMultipleQtyOfPurchaseAsItem >>>>>> ` + this.lotMultipleQtyOfPurchaseAsItem);
        this.attach(`lotMultipleQtyOfPurchaseAsItem >>>>>> ` + this.lotMultipleQtyOfPurchaseAsItem);
        logger.log('info', `meanLtdOfPurchaseAsItem >>>>>> ` + this.meanLtdOfPurchaseAsItem);
        this.attach(`meanLtdOfPurchaseAsItem >>>>>> ` + this.meanLtdOfPurchaseAsItem);
        logger.log('info', `safetyStockLtdOfPurchaseAsItem >>>>>> ` + this.safetyStockLtdOfPurchaseAsItem);
        this.attach(`safetyStockLtdOfPurchaseAsItem >>>>>> ` + this.safetyStockLtdOfPurchaseAsItem);
        logger.log('info', `snapshotQtyOfPurchaseAsItem >>>>>> ` + this.snapshotQtyOfPurchaseAsItem);
        this.attach(`snapshotQtyOfPurchaseAsItem >>>>>> ` + this.snapshotQtyOfPurchaseAsItem);
        logger.log('info', `openSalesOrdersOfPurchaseAsItem >>>>>> ` + this.openSalesOrdersOfPurchaseAsItem);
        this.attach(`openSalesOrdersOfPurchaseAsItem >>>>>> ` + this.openSalesOrdersOfPurchaseAsItem);
        logger.log('info', `openPurchaseOrdersOfPurchaseAsItem >>>>>> ` + this.openPurchaseOrdersOfPurchaseAsItem);
        this.attach(`openPurchaseOrdersOfPurchaseAsItem >>>>>> ` + this.openPurchaseOrdersOfPurchaseAsItem);
        logger.log('info', `onHandThirdPartyOfPurchaseAsItem >>>>>> ` + this.onHandThirdPartyOfPurchaseAsItem);
        this.attach(`onHandThirdPartyOfPurchaseAsItem >>>>>> ` + this.onHandThirdPartyOfPurchaseAsItem);
        logger.log('info', `inventorySourcePreferenceOfPurchaseAsItem >>>>>> ` + this.inventorySourcePreferenceOfPurchaseAsItem);
        this.attach(`inventorySourcePreferenceOfPurchaseAsItem >>>>>> ` + this.inventorySourcePreferenceOfPurchaseAsItem);
        logger.log('info', `onHandOfPurchaseAsItem >>>>>> ` + this.onHandOfPurchaseAsItem);
        this.attach(`onHandOfPurchaseAsItem >>>>>> ` + this.onHandOfPurchaseAsItem);
        logger.log('info', `inboundOfPurchaseAsItem >>>>>> ` + this.inboundOfPurchaseAsItem);
        this.attach(`inboundOfPurchaseAsItem >>>>>> ` + this.inboundOfPurchaseAsItem);
        logger.log('info', `inboundFcTransferOfPurchaseAsItem >>>>>> ` + this.inboundFcTransferOfPurchaseAsItem);
        this.attach(`inboundFcTransferOfPurchaseAsItem >>>>>> ` + this.inboundFcTransferOfPurchaseAsItem);
        logger.log('info', `onHandFbmOfPurchaseAsItem >>>>>> ` + this.onHandFbmOfPurchaseAsItem);
        this.attach(`onHandFbmOfPurchaseAsItem >>>>>> ` + this.onHandFbmOfPurchaseAsItem);
        logger.log('info', `consolidatedQtyOfPurchaseAsItem >>>>>> ` + this.consolidatedQtyOfPurchaseAsItem);
        this.attach(`consolidatedQtyOfPurchaseAsItem >>>>>> ` + this.consolidatedQtyOfPurchaseAsItem);
    } else {
        this.meanLtdActualOfItem = this.randomAPurchaseAsItemObject.meanLtd;
        this.safetyStockLtdActualOfItem = this.randomAPurchaseAsItemObject.safetyStockLtd;
        this.snapshotQtyActualOfItem = this.randomAPurchaseAsItemObject.snapshotQty;
        this.openSalesOrdersActualOfItem = this.randomAPurchaseAsItemObject.openSalesOrders;
        this.openPurchaseOrdersActualOfItem = this.randomAPurchaseAsItemObject.openPurchaseOrders;
        this.onHandThirdPartyActualOfItem = this.randomAPurchaseAsItemObject.onHandThirdParty;
        this.inventorySourcePreferenceActualOfItem = this.randomAPurchaseAsItemObject.inventorySourcePreference;
        this.onHandActualOfItem = this.randomAPurchaseAsItemObject.onHand;
        this.inboundActualOfItem = this.randomAPurchaseAsItemObject.inbound;
        this.inboundFcTransferActualOfItem = this.randomAPurchaseAsItemObject.inboundFcTransfer;
        this.onHandFbmActualOfItem = this.randomAPurchaseAsItemObject.onHandFbm;
        this.consolidatedQtyActualOfItem = this.randomAPurchaseAsItemObject.consolidatedQty;
        this.lotMultipleQtyOfActualItem = this.randomAPurchaseAsItemObject.lotMultipleQty;
        logger.log('info', `lotMultipleQtyOfActualItem >>>>>> ` + this.lotMultipleQtyOfActualItem);
        this.attach(`lotMultipleQtyOfActualItem >>>>>> ` + this.lotMultipleQtyOfActualItem);
        logger.log('info', `meanLtdActualOfItem >>>>>> ` + this.meanLtdActualOfItem);
        this.attach(`meanLtdActualOfItem >>>>>> ` + this.meanLtdActualOfItem);
        logger.log('info', `safetyStockLtdOfItem >>>>>> ` + this.safetyStockLtdActualOfItem);
        this.attach(`safetyStockLtdActualOfItem >>>>>> ` + this.safetyStockLtdActualOfItem);
        logger.log('info', `snapshotQtyActualOfItem >>>>>> ` + this.snapshotQtyActualOfItem);
        this.attach(`snapshotQtyActualOfItem >>>>>> ` + this.snapshotQtyActualOfItem);
        logger.log('info', `openSalesOrdersActualOfItem >>>>>> ` + this.openSalesOrdersActualOfItem);
        this.attach(`openSalesOrdersActualOfItem >>>>>> ` + this.openSalesOrdersActualOfItem);
        logger.log('info', `openPurchaseOrdersActualOfItem >>>>>> ` + this.openPurchaseOrdersActualOfItem);
        this.attach(`openPurchaseOrdersActualOfItem >>>>>> ` + this.openPurchaseOrdersActualOfItem);
        logger.log('info', `onHandThirdPartyActualOfItem >>>>>> ` + this.onHandThirdPartyActualOfItem);
        this.attach(`onHandThirdPartyActualOfItem >>>>>> ` + this.onHandThirdPartyActualOfItem);
        logger.log('info', `inventorySourcePreferenceActualOfItem >>>>>> ` + this.inventorySourcePreferenceActualOfItem);
        this.attach(`inventorySourcePreferenceOfActualItem >>>>>> ` + this.inventorySourcePreferenceActualOfItem);
        logger.log('info', `onHandActualOfItem >>>>>> ` + this.onHandActualOfItem);
        this.attach(`onHandActualOfItem >>>>>> ` + this.onHandActualOfItem);
        logger.log('info', `inboundActualOfItem >>>>>> ` + this.inboundActualOfItem);
        this.attach(`inboundActualOfItem >>>>>> ` + this.inboundActualOfItem);
        logger.log('info', `inboundFcTransferActualOfItem >>>>>> ` + this.inboundFcTransferActualOfItem);
        this.attach(`inboundFcTransferActualOfItem >>>>>> ` + this.inboundFcTransferActualOfItem);
        logger.log('info', `onHandFbmActualOfItem >>>>>> ` + this.onHandFbmActualOfItem);
        this.attach(`onHandFbmActualOfItem >>>>>> ` + this.onHandFbmActualOfItem);
        logger.log('info', `consolidatedQtyActualOfItem >>>>>> ` + this.consolidatedQtyActualOfItem);
        this.attach(`consolidatedQtyActualOfItem >>>>>> ` + this.consolidatedQtyActualOfItem);
    }
});

Then(`{} checks value in Item card`, async function (actor: string) {
    forecastRecommendedPurchasing({ meanLtd: this.meanLtdOfItem, safetyStockLtd: this.safetyStockLtdOfItem, openSalesOrders: this.openSalesOrdersOfItem, openPurchaseOrders: this.openPurchaseOrdersOfItem, onHandThirdParty: this.onHandThirdPartyOfItem, inventorySourcePreference: this.inventorySourcePreferenceOfItem, onHand: this.onHandOfItem, inbound: this.inboundOfItem, inboundFcTransfer: this.inboundFcTransferOfItem, onHandFbm: this.onHandFbmOfItem, lotMultipleQty: this.lotMultipleQtyOfItem, snapshotQty: this.snapshotQtyOfItem, consolidatedQty: this.consolidatedQtyOfItem }, this.attach);
});

Then(`{} calculates Purchase As item`, async function (actor: string) {
    this.meanLtdOfItem = this.meanLtdActualOfItem;
    this.safetyStockLtdOfItem = this.safetyStockLtdActualOfItem ;
    this.openSalesOrdersOfItem = this.openSalesOrdersActualOfItem;
    this.openPurchaseOrdersOfItem = this.openPurchaseOrdersActualOfItem;
    this.purchaseAsOnHandThirdParty = this.onHandThirdPartyOfItem + this.onHandThirdPartyOfPurchaseAsItem;
    this.onHandThirdPartyOfItem = this.purchaseAsOnHandThirdParty;
    this.purchaseAsOnHand = this.onHandOfItem + this.onHandOfPurchaseAsItem;
    this.onHandOfItem = this.purchaseAsOnHand;
    this.purchaseAsInbound = this.inboundOfItem + this.inboundOfPurchaseAsItem;
    this.inboundOfItem = this.purchaseAsInbound;
    this.purchaseAsInboundFcTransfer = this.inboundFcTransferOfItem + this.inboundFcTransferOfPurchaseAsItem;
    this.inboundFcTransferOfItem = this.purchaseAsInboundFcTransfer
    this.purchaseAsOnHandFbm = this.onHandFbmOfItem + this.onHandFbmOfPurchaseAsItem;
    this.onHandFbmOfItem = this.purchaseAsOnHandFbm;
    this.consolidatedQtyOfItem = this.consolidatedQtyActualOfItem;
    this.lotMultipleQtyOfItem = this.lotMultipleQtyOfActualItem;
    this.inventorySourcePreferenceOfItem = this.inventorySourcePreferenceActualOfItem;
    this.snapshotQtyOfItem = this.snapshotQtyActualOfItem;

    logger.log('info', `lotMultipleQtyOfItem >>>>>> ` + this.lotMultipleQtyOfItem);
    this.attach(`lotMultipleQtyOfItem >>>>>> ` + this.lotMultipleQtyOfItem);
    logger.log('info', `meanLtdOfItem >>>>>> ` + this.meanLtdOfItem);
    this.attach(`meanLtdOfItem >>>>>> ` + this.meanLtdOfItem);
    logger.log('info', `safetyStockLtdOfItem >>>>>> ` + this.safetyStockLtdOfItem);
    this.attach(`safetyStockLtdOfItem >>>>>> ` + this.safetyStockLtdOfItem);
    logger.log('info', `snapshotQtyOfItem >>>>>> ` + this.snapshotQtyOfItem);
    this.attach(`snapshotQtyOfItem >>>>>> ` + this.snapshotQtyOfItem);
    logger.log('info', `openSalesOrdersOfItem >>>>>> ` + this.openSalesOrdersOfItem);
    this.attach(`openSalesOrdersOfItem >>>>>> ` + this.openSalesOrdersOfItem);
    logger.log('info', `openPurchaseOrdersOfItem >>>>>> ` + this.openPurchaseOrdersOfItem);
    this.attach(`openPurchaseOrdersOfItem >>>>>> ` + this.openPurchaseOrdersOfItem);
    logger.log('info', `onHandThirdPartyOfItem >>>>>> ` + this.onHandThirdPartyOfItem);
    this.attach(`onHandThirdPartyOfItem >>>>>> ` + this.onHandThirdPartyOfItem);
    logger.log('info', `inventorySourcePreferenceOfItem >>>>>> ` + this.inventorySourcePreferenceOfItem);
    this.attach(`inventorySourcePreferenceOfItem >>>>>> ` + this.inventorySourcePreferenceOfItem);
    logger.log('info', `onHandOfItem >>>>>> ` + this.onHandOfItem);
    this.attach(`onHandOfItem >>>>>> ` + this.onHandOfItem);
    logger.log('info', `inboundOfItem >>>>>> ` + this.inboundOfItem);
    this.attach(`inboundOfItem >>>>>> ` + this.inboundOfItem);
    logger.log('info', `inboundFcTransferOfItem >>>>>> ` + this.inboundFcTransferOfItem);
    this.attach(`inboundFcTransferOfItem >>>>>> ` + this.inboundFcTransferOfItem);
    logger.log('info', `onHandFbmOfItem >>>>>> ` + this.onHandFbmOfItem);
    this.attach(`onHandFbmOfItem >>>>>> ` + this.onHandFbmOfItem);
    logger.log('info', `consolidatedQtyOfItem >>>>>> ` + this.consolidatedQtyOfItem);
    this.attach(`consolidatedQtyOfItem >>>>>> ` + this.consolidatedQtyOfItem);
});